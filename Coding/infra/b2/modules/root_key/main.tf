terraform {
  required_version = ">= 1.0.0"
  required_providers {
    b2 = {
      source = "Backblaze/b2"
    }
  }
}

variable "name" {
  type = string
}

resource "b2_application_key" "key" {
  key_name = var.name

  # Everything goes in here
  capabilities = [
    "bypassGovernance",
    "deleteBuckets",
    "deleteFiles",
    "deleteKeys",
    "listBuckets",
    "listFiles",
    "listKeys",
    "readBucketEncryption",
    "readBucketRetentions",
    "readBuckets",
    "readFileLegalHolds",
    "readFileRetentions",
    "readFiles",
    "shareFiles",
    "writeBucketEncryption",
    "writeBucketRetentions",
    "writeBuckets",
    "writeFileLegalHolds",
    "writeFileRetentions",
    "writeFiles",
    "writeKeys",
  ]
}

resource "local_file" "credentials" {
  filename = "${path.root}/credentials/root/${b2_application_key.key.key_name}.source"
  content  = <<EOF
#!/usr/bin/env bash

# Auto-generated by Terraform

export B2_APPLICATION_KEY_NAME="${b2_application_key.key.key_name}"
export B2_APPLICATION_KEY_ID="${b2_application_key.key.application_key_id}"
export B2_APPLICATION_KEY="${b2_application_key.key.application_key}"

# Same credentials for AWS, since we shoehorn Backblaze to look like S3 as a Terraform backend
export AWS_ACCESS_KEY_ID="${b2_application_key.key.application_key_id}"
export AWS_SECRET_ACCESS_KEY="${b2_application_key.key.application_key}"
EOF
}
